// Code generated by protoc-gen-go. DO NOT EDIT.
// source: sample.proto

package testprotos // import "deepchain/common/tools/protolator/testprotos"

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// SimpleMsg is designed to test that all three types of message fields, plain, map,
// and slice are handled by the protolator tool
type SimpleMsg struct {
	PlainField           string            `protobuf:"bytes,1,opt,name=plain_field,json=plainField,proto3" json:"plain_field,omitempty"`
	MapField             map[string]string `protobuf:"bytes,2,rep,name=map_field,json=mapField,proto3" json:"map_field,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	SliceField           []string          `protobuf:"bytes,3,rep,name=slice_field,json=sliceField,proto3" json:"slice_field,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *SimpleMsg) Reset()         { *m = SimpleMsg{} }
func (m *SimpleMsg) String() string { return proto.CompactTextString(m) }
func (*SimpleMsg) ProtoMessage()    {}
func (*SimpleMsg) Descriptor() ([]byte, []int) {
	return fileDescriptor_sample_de8c785943282e8f, []int{0}
}
func (m *SimpleMsg) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SimpleMsg.Unmarshal(m, b)
}
func (m *SimpleMsg) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SimpleMsg.Marshal(b, m, deterministic)
}
func (dst *SimpleMsg) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SimpleMsg.Merge(dst, src)
}
func (m *SimpleMsg) XXX_Size() int {
	return xxx_messageInfo_SimpleMsg.Size(m)
}
func (m *SimpleMsg) XXX_DiscardUnknown() {
	xxx_messageInfo_SimpleMsg.DiscardUnknown(m)
}

var xxx_messageInfo_SimpleMsg proto.InternalMessageInfo

func (m *SimpleMsg) GetPlainField() string {
	if m != nil {
		return m.PlainField
	}
	return ""
}

func (m *SimpleMsg) GetMapField() map[string]string {
	if m != nil {
		return m.MapField
	}
	return nil
}

func (m *SimpleMsg) GetSliceField() []string {
	if m != nil {
		return m.SliceField
	}
	return nil
}

// NestedMsg is designed to test the nested message component
type NestedMsg struct {
	PlainNestedField     *SimpleMsg            `protobuf:"bytes,1,opt,name=plain_nested_field,json=plainNestedField,proto3" json:"plain_nested_field,omitempty"`
	MapNestedField       map[string]*SimpleMsg `protobuf:"bytes,2,rep,name=map_nested_field,json=mapNestedField,proto3" json:"map_nested_field,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	SliceNestedField     []*SimpleMsg          `protobuf:"bytes,3,rep,name=slice_nested_field,json=sliceNestedField,proto3" json:"slice_nested_field,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *NestedMsg) Reset()         { *m = NestedMsg{} }
func (m *NestedMsg) String() string { return proto.CompactTextString(m) }
func (*NestedMsg) ProtoMessage()    {}
func (*NestedMsg) Descriptor() ([]byte, []int) {
	return fileDescriptor_sample_de8c785943282e8f, []int{1}
}
func (m *NestedMsg) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NestedMsg.Unmarshal(m, b)
}
func (m *NestedMsg) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NestedMsg.Marshal(b, m, deterministic)
}
func (dst *NestedMsg) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NestedMsg.Merge(dst, src)
}
func (m *NestedMsg) XXX_Size() int {
	return xxx_messageInfo_NestedMsg.Size(m)
}
func (m *NestedMsg) XXX_DiscardUnknown() {
	xxx_messageInfo_NestedMsg.DiscardUnknown(m)
}

var xxx_messageInfo_NestedMsg proto.InternalMessageInfo

func (m *NestedMsg) GetPlainNestedField() *SimpleMsg {
	if m != nil {
		return m.PlainNestedField
	}
	return nil
}

func (m *NestedMsg) GetMapNestedField() map[string]*SimpleMsg {
	if m != nil {
		return m.MapNestedField
	}
	return nil
}

func (m *NestedMsg) GetSliceNestedField() []*SimpleMsg {
	if m != nil {
		return m.SliceNestedField
	}
	return nil
}

// StaticallyOpaqueMsg is designed to test the statically opaque message component
// All fields are statically marshaled to the NestedMsg type
type StaticallyOpaqueMsg struct {
	PlainOpaqueField     []byte            `protobuf:"bytes,1,opt,name=plain_opaque_field,json=plainOpaqueField,proto3" json:"plain_opaque_field,omitempty"`
	MapOpaqueField       map[string][]byte `protobuf:"bytes,2,rep,name=map_opaque_field,json=mapOpaqueField,proto3" json:"map_opaque_field,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	SliceOpaqueField     [][]byte          `protobuf:"bytes,3,rep,name=slice_opaque_field,json=sliceOpaqueField,proto3" json:"slice_opaque_field,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *StaticallyOpaqueMsg) Reset()         { *m = StaticallyOpaqueMsg{} }
func (m *StaticallyOpaqueMsg) String() string { return proto.CompactTextString(m) }
func (*StaticallyOpaqueMsg) ProtoMessage()    {}
func (*StaticallyOpaqueMsg) Descriptor() ([]byte, []int) {
	return fileDescriptor_sample_de8c785943282e8f, []int{2}
}
func (m *StaticallyOpaqueMsg) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StaticallyOpaqueMsg.Unmarshal(m, b)
}
func (m *StaticallyOpaqueMsg) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StaticallyOpaqueMsg.Marshal(b, m, deterministic)
}
func (dst *StaticallyOpaqueMsg) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StaticallyOpaqueMsg.Merge(dst, src)
}
func (m *StaticallyOpaqueMsg) XXX_Size() int {
	return xxx_messageInfo_StaticallyOpaqueMsg.Size(m)
}
func (m *StaticallyOpaqueMsg) XXX_DiscardUnknown() {
	xxx_messageInfo_StaticallyOpaqueMsg.DiscardUnknown(m)
}

var xxx_messageInfo_StaticallyOpaqueMsg proto.InternalMessageInfo

func (m *StaticallyOpaqueMsg) GetPlainOpaqueField() []byte {
	if m != nil {
		return m.PlainOpaqueField
	}
	return nil
}

func (m *StaticallyOpaqueMsg) GetMapOpaqueField() map[string][]byte {
	if m != nil {
		return m.MapOpaqueField
	}
	return nil
}

func (m *StaticallyOpaqueMsg) GetSliceOpaqueField() [][]byte {
	if m != nil {
		return m.SliceOpaqueField
	}
	return nil
}

// VariablyOpaqueMsg is designed to test the staticaly opaque message component
// The opaque type is determined by opaque_type
type VariablyOpaqueMsg struct {
	OpaqueType           string            `protobuf:"bytes,1,opt,name=opaque_type,json=opaqueType,proto3" json:"opaque_type,omitempty"`
	PlainOpaqueField     []byte            `protobuf:"bytes,2,opt,name=plain_opaque_field,json=plainOpaqueField,proto3" json:"plain_opaque_field,omitempty"`
	MapOpaqueField       map[string][]byte `protobuf:"bytes,3,rep,name=map_opaque_field,json=mapOpaqueField,proto3" json:"map_opaque_field,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	SliceOpaqueField     [][]byte          `protobuf:"bytes,4,rep,name=slice_opaque_field,json=sliceOpaqueField,proto3" json:"slice_opaque_field,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *VariablyOpaqueMsg) Reset()         { *m = VariablyOpaqueMsg{} }
func (m *VariablyOpaqueMsg) String() string { return proto.CompactTextString(m) }
func (*VariablyOpaqueMsg) ProtoMessage()    {}
func (*VariablyOpaqueMsg) Descriptor() ([]byte, []int) {
	return fileDescriptor_sample_de8c785943282e8f, []int{3}
}
func (m *VariablyOpaqueMsg) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VariablyOpaqueMsg.Unmarshal(m, b)
}
func (m *VariablyOpaqueMsg) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VariablyOpaqueMsg.Marshal(b, m, deterministic)
}
func (dst *VariablyOpaqueMsg) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VariablyOpaqueMsg.Merge(dst, src)
}
func (m *VariablyOpaqueMsg) XXX_Size() int {
	return xxx_messageInfo_VariablyOpaqueMsg.Size(m)
}
func (m *VariablyOpaqueMsg) XXX_DiscardUnknown() {
	xxx_messageInfo_VariablyOpaqueMsg.DiscardUnknown(m)
}

var xxx_messageInfo_VariablyOpaqueMsg proto.InternalMessageInfo

func (m *VariablyOpaqueMsg) GetOpaqueType() string {
	if m != nil {
		return m.OpaqueType
	}
	return ""
}

func (m *VariablyOpaqueMsg) GetPlainOpaqueField() []byte {
	if m != nil {
		return m.PlainOpaqueField
	}
	return nil
}

func (m *VariablyOpaqueMsg) GetMapOpaqueField() map[string][]byte {
	if m != nil {
		return m.MapOpaqueField
	}
	return nil
}

func (m *VariablyOpaqueMsg) GetSliceOpaqueField() [][]byte {
	if m != nil {
		return m.SliceOpaqueField
	}
	return nil
}

// DynamicMsg is designed to test the dynamic message component
// The dynamic wrapper applied to ContextlessMsg is determined by
// dynamic_type
type DynamicMsg struct {
	DynamicType          string                     `protobuf:"bytes,1,opt,name=dynamic_type,json=dynamicType,proto3" json:"dynamic_type,omitempty"`
	PlainDynamicField    *ContextlessMsg            `protobuf:"bytes,2,opt,name=plain_dynamic_field,json=plainDynamicField,proto3" json:"plain_dynamic_field,omitempty"`
	MapDynamicField      map[string]*ContextlessMsg `protobuf:"bytes,3,rep,name=map_dynamic_field,json=mapDynamicField,proto3" json:"map_dynamic_field,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	SliceDynamicField    []*ContextlessMsg          `protobuf:"bytes,4,rep,name=slice_dynamic_field,json=sliceDynamicField,proto3" json:"slice_dynamic_field,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                   `json:"-"`
	XXX_unrecognized     []byte                     `json:"-"`
	XXX_sizecache        int32                      `json:"-"`
}

func (m *DynamicMsg) Reset()         { *m = DynamicMsg{} }
func (m *DynamicMsg) String() string { return proto.CompactTextString(m) }
func (*DynamicMsg) ProtoMessage()    {}
func (*DynamicMsg) Descriptor() ([]byte, []int) {
	return fileDescriptor_sample_de8c785943282e8f, []int{4}
}
func (m *DynamicMsg) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DynamicMsg.Unmarshal(m, b)
}
func (m *DynamicMsg) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DynamicMsg.Marshal(b, m, deterministic)
}
func (dst *DynamicMsg) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DynamicMsg.Merge(dst, src)
}
func (m *DynamicMsg) XXX_Size() int {
	return xxx_messageInfo_DynamicMsg.Size(m)
}
func (m *DynamicMsg) XXX_DiscardUnknown() {
	xxx_messageInfo_DynamicMsg.DiscardUnknown(m)
}

var xxx_messageInfo_DynamicMsg proto.InternalMessageInfo

func (m *DynamicMsg) GetDynamicType() string {
	if m != nil {
		return m.DynamicType
	}
	return ""
}

func (m *DynamicMsg) GetPlainDynamicField() *ContextlessMsg {
	if m != nil {
		return m.PlainDynamicField
	}
	return nil
}

func (m *DynamicMsg) GetMapDynamicField() map[string]*ContextlessMsg {
	if m != nil {
		return m.MapDynamicField
	}
	return nil
}

func (m *DynamicMsg) GetSliceDynamicField() []*ContextlessMsg {
	if m != nil {
		return m.SliceDynamicField
	}
	return nil
}

// ContextlessMsg is designed to carry a message of completely arbitrary type
// Because there is no context for the type embedded in the message, the opaque
// type must be dynamically added at runtime
type ContextlessMsg struct {
	OpaqueField          []byte   `protobuf:"bytes,1,opt,name=opaque_field,json=opaqueField,proto3" json:"opaque_field,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ContextlessMsg) Reset()         { *m = ContextlessMsg{} }
func (m *ContextlessMsg) String() string { return proto.CompactTextString(m) }
func (*ContextlessMsg) ProtoMessage()    {}
func (*ContextlessMsg) Descriptor() ([]byte, []int) {
	return fileDescriptor_sample_de8c785943282e8f, []int{5}
}
func (m *ContextlessMsg) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ContextlessMsg.Unmarshal(m, b)
}
func (m *ContextlessMsg) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ContextlessMsg.Marshal(b, m, deterministic)
}
func (dst *ContextlessMsg) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ContextlessMsg.Merge(dst, src)
}
func (m *ContextlessMsg) XXX_Size() int {
	return xxx_messageInfo_ContextlessMsg.Size(m)
}
func (m *ContextlessMsg) XXX_DiscardUnknown() {
	xxx_messageInfo_ContextlessMsg.DiscardUnknown(m)
}

var xxx_messageInfo_ContextlessMsg proto.InternalMessageInfo

func (m *ContextlessMsg) GetOpaqueField() []byte {
	if m != nil {
		return m.OpaqueField
	}
	return nil
}

// UnmarshalableDeepFields contains fields which are defined to be opaque, but will
// return an error if they are asked to be deserialized.
type UnmarshalableDeepFields struct {
	PlainOpaqueField     []byte            `protobuf:"bytes,1,opt,name=plain_opaque_field,json=plainOpaqueField,proto3" json:"plain_opaque_field,omitempty"`
	MapOpaqueField       map[string][]byte `protobuf:"bytes,2,rep,name=map_opaque_field,json=mapOpaqueField,proto3" json:"map_opaque_field,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	SliceOpaqueField     [][]byte          `protobuf:"bytes,3,rep,name=slice_opaque_field,json=sliceOpaqueField,proto3" json:"slice_opaque_field,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *UnmarshalableDeepFields) Reset()         { *m = UnmarshalableDeepFields{} }
func (m *UnmarshalableDeepFields) String() string { return proto.CompactTextString(m) }
func (*UnmarshalableDeepFields) ProtoMessage()    {}
func (*UnmarshalableDeepFields) Descriptor() ([]byte, []int) {
	return fileDescriptor_sample_de8c785943282e8f, []int{6}
}
func (m *UnmarshalableDeepFields) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UnmarshalableDeepFields.Unmarshal(m, b)
}
func (m *UnmarshalableDeepFields) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UnmarshalableDeepFields.Marshal(b, m, deterministic)
}
func (dst *UnmarshalableDeepFields) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UnmarshalableDeepFields.Merge(dst, src)
}
func (m *UnmarshalableDeepFields) XXX_Size() int {
	return xxx_messageInfo_UnmarshalableDeepFields.Size(m)
}
func (m *UnmarshalableDeepFields) XXX_DiscardUnknown() {
	xxx_messageInfo_UnmarshalableDeepFields.DiscardUnknown(m)
}

var xxx_messageInfo_UnmarshalableDeepFields proto.InternalMessageInfo

func (m *UnmarshalableDeepFields) GetPlainOpaqueField() []byte {
	if m != nil {
		return m.PlainOpaqueField
	}
	return nil
}

func (m *UnmarshalableDeepFields) GetMapOpaqueField() map[string][]byte {
	if m != nil {
		return m.MapOpaqueField
	}
	return nil
}

func (m *UnmarshalableDeepFields) GetSliceOpaqueField() [][]byte {
	if m != nil {
		return m.SliceOpaqueField
	}
	return nil
}

func init() {
	proto.RegisterType((*SimpleMsg)(nil), "testprotos.SimpleMsg")
	proto.RegisterMapType((map[string]string)(nil), "testprotos.SimpleMsg.MapFieldEntry")
	proto.RegisterType((*NestedMsg)(nil), "testprotos.NestedMsg")
	proto.RegisterMapType((map[string]*SimpleMsg)(nil), "testprotos.NestedMsg.MapNestedFieldEntry")
	proto.RegisterType((*StaticallyOpaqueMsg)(nil), "testprotos.StaticallyOpaqueMsg")
	proto.RegisterMapType((map[string][]byte)(nil), "testprotos.StaticallyOpaqueMsg.MapOpaqueFieldEntry")
	proto.RegisterType((*VariablyOpaqueMsg)(nil), "testprotos.VariablyOpaqueMsg")
	proto.RegisterMapType((map[string][]byte)(nil), "testprotos.VariablyOpaqueMsg.MapOpaqueFieldEntry")
	proto.RegisterType((*DynamicMsg)(nil), "testprotos.DynamicMsg")
	proto.RegisterMapType((map[string]*ContextlessMsg)(nil), "testprotos.DynamicMsg.MapDynamicFieldEntry")
	proto.RegisterType((*ContextlessMsg)(nil), "testprotos.ContextlessMsg")
	proto.RegisterType((*UnmarshalableDeepFields)(nil), "testprotos.UnmarshalableDeepFields")
	proto.RegisterMapType((map[string][]byte)(nil), "testprotos.UnmarshalableDeepFields.MapOpaqueFieldEntry")
}

func init() { proto.RegisterFile("sample.proto", fileDescriptor_sample_de8c785943282e8f) }

var fileDescriptor_sample_de8c785943282e8f = []byte{
	// 600 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xcc, 0x94, 0xcf, 0x6e, 0xd3, 0x40,
	0x10, 0xc6, 0x15, 0xbb, 0x20, 0x32, 0x0e, 0x25, 0x71, 0x8a, 0xa8, 0x72, 0x69, 0x08, 0x97, 0xa2,
	0x46, 0x09, 0x24, 0x07, 0x10, 0x5c, 0x80, 0x16, 0x0e, 0x48, 0x05, 0x29, 0xe1, 0x9f, 0x40, 0x80,
	0x36, 0xc9, 0x42, 0x2d, 0xd6, 0x7f, 0xc8, 0x6e, 0x11, 0xbe, 0xf1, 0x0e, 0x1c, 0x79, 0x09, 0x1e,
	0x82, 0x23, 0x0f, 0x85, 0x76, 0x67, 0x53, 0xcf, 0x52, 0xbb, 0x08, 0x21, 0xa4, 0x9e, 0x12, 0x8f,
	0x77, 0xbe, 0xf9, 0xbe, 0x9f, 0x77, 0x17, 0x1a, 0x92, 0xc5, 0x99, 0xe0, 0x83, 0x6c, 0x99, 0xaa,
	0x34, 0x04, 0xc5, 0xa5, 0x32, 0x7f, 0x65, 0xef, 0x67, 0x0d, 0xea, 0xd3, 0x48, 0xbf, 0xdc, 0x97,
	0xef, 0xc3, 0x2d, 0x08, 0x32, 0xc1, 0xa2, 0xe4, 0xed, 0xbb, 0x88, 0x8b, 0xc5, 0x66, 0xad, 0x5b,
	0xdb, 0xae, 0x4f, 0xc0, 0x94, 0x1e, 0xe8, 0x4a, 0x78, 0x07, 0xea, 0x31, 0xcb, 0xec, 0x6b, 0xaf,
	0xeb, 0x6f, 0x07, 0xa3, 0x2b, 0x83, 0x42, 0x6e, 0x70, 0x24, 0x35, 0xd8, 0x67, 0x99, 0x69, 0xb9,
	0x9f, 0xa8, 0x65, 0x3e, 0x39, 0x17, 0xdb, 0x47, 0x3d, 0x42, 0x8a, 0x68, 0xce, 0xad, 0x86, 0xdf,
	0xf5, 0xf5, 0x08, 0x53, 0x32, 0x0b, 0x3a, 0xb7, 0xe1, 0xbc, 0xd3, 0x1b, 0x36, 0xc1, 0xff, 0xc0,
	0x73, 0x6b, 0x46, 0xff, 0x0d, 0x37, 0xe0, 0xcc, 0x27, 0x26, 0x0e, 0xf9, 0xa6, 0x67, 0x6a, 0xf8,
	0x70, 0xcb, 0xbb, 0x59, 0xeb, 0xfd, 0xf0, 0xa0, 0xfe, 0x88, 0x4b, 0xc5, 0x17, 0x3a, 0xce, 0x2e,
	0x84, 0x18, 0x27, 0x31, 0x25, 0x92, 0x2a, 0x18, 0x5d, 0x2c, 0xb5, 0x3d, 0x69, 0x9a, 0x06, 0x94,
	0x40, 0xc3, 0x53, 0x68, 0xea, 0xc8, 0x8e, 0x04, 0x26, 0xbf, 0x4a, 0x25, 0x8e, 0xa6, 0xea, 0xe4,
	0xa4, 0x1f, 0xf3, 0xaf, 0xc7, 0x4e, 0x51, 0x3b, 0x43, 0x0a, 0x8e, 0xac, 0x6f, 0x64, 0xab, 0x9c,
	0x99, 0x06, 0x22, 0xd2, 0x79, 0x01, 0xed, 0x92, 0x59, 0x25, 0xbc, 0x76, 0x28, 0xaf, 0xca, 0x01,
	0x04, 0xe3, 0x57, 0x0f, 0xda, 0x53, 0xc5, 0x54, 0x34, 0x67, 0x42, 0xe4, 0x8f, 0x33, 0xf6, 0xf1,
	0xd0, 0xec, 0x8f, 0xfe, 0x0a, 0x68, 0x6a, 0x4a, 0x04, 0x68, 0xc3, 0x92, 0xc3, 0xb5, 0x18, 0xf2,
	0x35, 0x92, 0x73, 0xd6, 0x22, 0xb9, 0xb1, 0xe3, 0xe0, 0xf8, 0x20, 0xcd, 0x90, 0x28, 0x15, 0x0c,
	0xa9, 0x7c, 0x7f, 0xc5, 0xd0, 0x19, 0xa0, 0x19, 0x36, 0x2c, 0x2c, 0xb2, 0xba, 0x73, 0xd7, 0xc0,
	0xfa, 0x5d, 0xf4, 0x4f, 0x9b, 0xab, 0x41, 0xa9, 0x7c, 0xf7, 0xa0, 0xf5, 0x8c, 0x2d, 0x23, 0x36,
	0xa3, 0x4c, 0xb6, 0x20, 0xb0, 0x06, 0x54, 0x9e, 0xf1, 0xd5, 0x99, 0xc1, 0xd2, 0x93, 0x3c, 0xe3,
	0x15, 0xd0, 0xbc, 0x0a, 0x68, 0xaf, 0x4a, 0xa0, 0xe1, 0xbe, 0xb8, 0x4e, 0xa1, 0x1d, 0xf3, 0xf1,
	0x0f, 0xc8, 0xd6, 0xfe, 0x1f, 0xb2, 0x2f, 0x3e, 0xc0, 0x5e, 0x9e, 0xb0, 0x38, 0x9a, 0x6b, 0x56,
	0x97, 0xa1, 0xb1, 0xc0, 0x27, 0x0a, 0x2b, 0xb0, 0x35, 0x43, 0xeb, 0x21, 0xb4, 0x91, 0xd6, 0x6a,
	0x61, 0x81, 0x2b, 0x18, 0x75, 0x28, 0x82, 0xdd, 0x34, 0x51, 0xfc, 0xb3, 0x12, 0x5c, 0x4a, 0xbd,
	0x7d, 0x5b, 0xa6, 0xcd, 0x0e, 0xc3, 0xb8, 0xcf, 0xa1, 0xa5, 0x59, 0xba, 0x4a, 0x08, 0x73, 0x87,
	0x2a, 0x15, 0x0e, 0x35, 0x45, 0x2a, 0x81, 0x18, 0x2f, 0xc4, 0x6e, 0x55, 0x9b, 0x44, 0x8e, 0xae,
	0xf4, 0x9a, 0x91, 0x3e, 0xd1, 0xa4, 0x69, 0xa3, 0x5a, 0x9d, 0x37, 0xb0, 0x51, 0x36, 0xb4, 0x04,
	0xf3, 0x35, 0xf7, 0x18, 0x9f, 0x34, 0x87, 0x7c, 0x82, 0x31, 0xac, 0xbb, 0x2f, 0xf5, 0x57, 0x28,
	0x39, 0xbf, 0x76, 0x17, 0x1b, 0x07, 0xbd, 0x6f, 0x1e, 0x5c, 0x7a, 0x9a, 0xc4, 0x6c, 0x29, 0x0f,
	0x98, 0x60, 0x33, 0xc1, 0xf7, 0x38, 0xc7, 0x3b, 0x59, 0xfe, 0xe5, 0x25, 0xc0, 0x2a, 0x2f, 0x81,
	0x1b, 0xd4, 0x7f, 0xc5, 0xb0, 0x53, 0x79, 0x11, 0xdc, 0x1b, 0xbc, 0xec, 0x2f, 0x38, 0xcf, 0xe6,
	0x07, 0x2c, 0x4a, 0x86, 0xf3, 0x34, 0x8e, 0xd3, 0x64, 0xa8, 0xd2, 0x54, 0xc8, 0xa1, 0x49, 0x23,
	0x98, 0x4a, 0x97, 0xc3, 0x22, 0xdc, 0xec, 0xac, 0xf9, 0x1d, 0xff, 0x0a, 0x00, 0x00, 0xff, 0xff,
	0x6b, 0x8e, 0x31, 0x57, 0x87, 0x07, 0x00, 0x00,
}
